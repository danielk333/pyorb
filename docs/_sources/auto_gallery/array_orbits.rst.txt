.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_gallery_array_orbits.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_gallery_array_orbits.py:


Array support
===============




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [0.5        0.66666667 0.83333333 1.         1.16666667 1.33333333
     1.5        1.66666667 1.83333333 2.         4.         1.
     1.         1.         1.        ]
    [0.         0.         0.         0.         0.         0.
     0.         0.         0.         0.                nan 0.
     0.06666667 0.13333333 0.2       ]
    15 Orbits
    a    : 1.4960e+11   x : nan
    e    : 2.0000e-01   y : nan
    i    : nan   z : nan
    omega: nan   vx: nan
    Omega: nan   vy: nan
    anom : nan   vz: nan
    [nan nan nan nan nan nan nan nan nan nan nan nan nan nan nan]
    [7.47989354e+10 9.97319138e+10 1.24664892e+11 1.49597871e+11
     1.74530849e+11 1.99463828e+11 2.24396806e+11 2.49329784e+11
     2.74262763e+11 2.99195741e+11            nan            nan
                nan            nan            nan]
    [ 0.  0.  0.  0.  0.  0.  0.  0.  0.  0. nan nan nan nan nan]
    [  0.          25.71428571  51.42857143  77.14285714 102.85714286
     128.57142857 154.28571429 180.         205.71428571 231.42857143
              nan 282.85714286 305.51892304 330.74357164   0.        ]






|


.. code-block:: default


    import pyorb

    import numpy as np

    #
    # THE MOST IMPORTANT THING
    # - properties act on ALL orbits in the class
    # - Only way to update individual orbits of a set is to use .update
    # - iterations are passive, the objects are copies from the array so the array itself is NOT modified


    orb = pyorb.Orbit(M0 = pyorb.M_sol, degrees=True)

    orb.allocate(10)
    orb.update(a=np.linspace(0.5,2,num=10)*pyorb.AU, e=0, i=0, omega=0, Omega=0, anom=0)
    # print(orb)

    orb.add(a=4*pyorb.AU)
    orb.add(num=4, a=1*pyorb.AU, e=np.linspace(0,0.2,num=4))
    print(orb.a/pyorb.AU)
    print(orb.e)
    print(orb)
    print(orb[14])

    print(orb._cart[0,:])
    print(orb.x)

    print(orb.eccentric_anomaly)
    orb.eccentric_anomaly = np.linspace(0,360,num=len(orb))
    print(orb.anom)

    # orb.update(inds=[2,3,4], anom=[0,45,90])
    # for o in orb[2:5]:
    #     print(o.r)

    # for o in orb[1:2]:
    #     print(o)

    # print(orb.x)

    # for o in orb[3:5]:
    #     print(o)


    # orb = pyorb.Orbit(M0 = pyorb.M_sol, degrees=True)
    # orb.update(a=1*pyorb.AU, e=0, i=0, omega=0, Omega=0, anom=45)

    # print(orb)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.006 seconds)


.. _sphx_glr_download_auto_gallery_array_orbits.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: array_orbits.py <array_orbits.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: array_orbits.ipynb <array_orbits.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
